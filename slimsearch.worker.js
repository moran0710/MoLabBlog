const{entries:$}=Object,{fromEntries:et}=Object,st="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,r=o+s,c=new Uint8Array(r*o).fill(s+1);for(let i=0;i<o;++i)c[i]=i;for(let i=1;i<r;++i)c[i*o]=i;return q(e,t,s,n,c,1,o,""),n},q=(e,t,s,n,o,r,c,i)=>{const h=r*c;t:for(const u of e.keys())if(u===_){const l=o[h-1];l<=s&&n.set(i,[e.get(u),l])}else{let l=r;for(let f=0;f<u.length;++f,++l){const m=u[f],g=c*l,y=g-c;let d=o[g];const a=Math.max(0,l-s-1),w=Math.min(c-1,l+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,l,c,i+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const c of o.keys())if(c!==_&&c.startsWith(r)){const i=new Map;return i.set(c.slice(r.length),o.get(c)),new z(i,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new S(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const c=Math.min(s-n,r.length);let i=1;for(;i<c&&t[n+i]===r[i];)++i;const h=e.get(r);if(i===r.length)e=h;else{const u=new Map;u.set(r.slice(i),h),e.set(t.slice(n,n+i),u),e.delete(r),e=u}n+=i;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)R(n);else if(s.size===1){const[o,r]=s.entries().next().value;A(n,o,r)}}},R=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&A(e.slice(0,-1),n,o)}},A=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],rt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ct="and_not",ut=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:c}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,c),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:c,match:i}=t.get(n);B(o.terms,c),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,i)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:c,b:i,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(c+1)/(e+c*(1-i+i*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t);r?.get(s)==null?H(e,s,t,n):r.get(s)<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,r.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},Y={minDirtFactor:.1,minDirtCount:20},yt={..._t,...Y},K=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const c=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:c,terms:[],match:{}})}return s},U=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},T=(e,t,s,n,o,r,c,i,h,u=new Map)=>{if(r==null)return u;for(const l of Object.keys(c)){const f=c[l],m=e._fieldIds[l],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,h),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ut(x.terms,t);const v=G(x.match,s);v?v.push(l):x.match[s]=[l]}else u.set(a,{score:k,terms:[t],match:{[s]:[l]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:c,maxFuzzy:i,bm25:h}=n,{fuzzy:u,prefix:l}={...J.weights,...c},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(i,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=l*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,h,m)}return m},Q=(e,t,s={})=>{if(t===K)return wt(e,s);if(typeof t!="string"){const l={...s,...t,queries:void 0},f=t.queries.map(m=>Q(e,m,l));return U(f,l.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,c={tokenize:n,processTerm:o,...r,...s},{tokenize:i,processTerm:h}=c,u=i(t).flatMap(l=>h(l)).filter(l=>!!l).map(at(c)).map(l=>xt(e,l,c));return U(u,c.combineWith)},X=(e,t,s={})=>{const n=Q(e,t,s),o=[];for(const[r,{score:c,terms:i,match:h}]of n){const u=i.length||1,l={id:e._documentIds.get(r),score:c*u,terms:Object.keys(h),queryTerms:i,match:h};Object.assign(l,e._storedFields.get(r)),(s.filter==null||s.filter(l))&&o.push(l)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:c}of X(e,t,s)){const i=c.join(" "),h=n.get(i);h!=null?(h.score+=r,h.count+=1):n.set(i,{score:r,terms:c,count:1})}const o=[];for(const[r,{score:c,terms:i,count:h}]of n)o.push({suggestion:r,terms:i,score:c/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=Y,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,c]of n)o[r]=Object.fromEntries(c);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},c)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const i=vt(c);return i._documentCount=e,i._nextId=t,i._idToShortId=new Map,i._fieldIds=s,i._avgFieldLength=n,i._dirtCount=o??0,i._index=new z,i},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,c=kt(e,t);c._documentIds=M(n),c._fieldLength=M(o),c._storedFields=M(r);for(const[i,h]of c._documentIds)c._idToShortId.set(h,i);for(const[i,h]of s){const u=new Map;for(const l of Object.keys(h))u.set(parseInt(l,10),M(h[l]));c._index.set(i,u)}return c},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,c=0;const i=(u,l=!1)=>{let f;c===0?f=u.length>20?`… ${u.slice(-20)}`:u:l?f=u.length+c>100?`${u.slice(0,100-c)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),c+=f.length,l||(o.push(["mark",t]),c+=t.length,c>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(i(e.slice(r,h)),r=u,c>100)break;h=s.indexOf(n,r)}return c<100&&i(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return X(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:c,score:i}=o,h=r.includes("@"),u=r.includes("#"),[l,f]=r.split(/[#@]/),m=Number(l),g=c.sort((d,a)=>d.length-a.length).filter((d,a)=>c.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},i]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},i]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},i])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:c}])=>{if(!r){const i=rt(t,o);i&&(r=i.h)}return{title:r,contents:c.map(([i])=>i)}})},tt=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=et($(JSON.parse("{\"/\":{\"documentCount\":21,\"nextId\":21,\"documentIds\":{\"0\":\"1\",\"1\":\"2\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4#上学-然后没时间维护\",\"5\":\"4#我觉得我会写什么\",\"6\":\"4#自定义\",\"7\":\"4#写在后面\",\"8\":\"4@0\",\"9\":\"5\",\"10\":\"6\",\"11\":\"6#概念\",\"12\":\"6#计算方法\",\"13\":\"6#概念-1\",\"14\":\"6#三和弦\",\"15\":\"6#七和弦\",\"16\":\"6@0\",\"17\":\"6@1\",\"18\":\"7\",\"19\":\"8\",\"20\":\"9\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2,6],\"1\":[1,1],\"2\":[1,1],\"3\":[2,10],\"4\":[2,24],\"5\":[1,6],\"6\":[2,6],\"7\":[1,2],\"8\":[null,null,1],\"9\":[1,5],\"10\":[2],\"11\":[1,6],\"12\":[2,51],\"13\":[1,3],\"14\":[1,9],\"15\":[1,30],\"16\":[null,null,1],\"17\":[null,null,3],\"18\":[1,3],\"19\":[1],\"20\":[1]},\"averageFieldLength\":[1.3482142857142858,10.448684210526316,0.32098765432098764],\"storedFields\":{\"0\":{\"h\":\"About Me\",\"t\":[\"Hi Im Moran0710\",\"一个普通的开发者/学习中的Vocaloid P主\"]},\"1\":{\"h\":\"技术杂谈\",\"t\":[\"这里收集我在coding的时候的想法\"]},\"2\":{\"h\":\"这个博客的事\",\"t\":[\"这里收集维护这个博客时发生的我觉得可以写下来的事情\"]},\"3\":{\"h\":\"折腾博客，再一次\",\"t\":[\"花了几个小时折腾了一下VuePress-theme-hope，重新做了一个小小的博客站点，之后可能再装修装修，\",\"现在这个站点处于一个能work但是几乎啥都没配置好的情况，想到之前尝试（全部没坚持下来）的博客站，写点我对博客的想法\"]},\"4\":{\"h\":\"上学，然后没时间维护\",\"t\":[\"墨冉写作本文的时候正在上高二，第一次搭建博客其实也没多远之前，中考后尝试用Wordpress做过一次，由于租的服务器太烂，卒\",\"之后用Typecho，说实话挺喜欢Typecho，但是服务器忘记续费（其实也没钱续费），卒\",\"后面也用过各种各样奇奇怪怪的PHP的博客系统，但是发现我其实都用不上他们，一个VuePress就足够用了，于是开始研究VuePress，一开始只是作为自己 项目的文档站（接触的其实是VitePress），之后回到VuePress，甚至开始学了点前端\",\"但是由于要上学，真的没时间和机会写博客啊，最近学了一会Vue，才打算重新捡起来，记录记录我的折腾过程，于是就有了这个站点\"]},\"5\":{\"h\":\"我觉得我会写什么\",\"t\":[\"折腾项目的感想，踩过的坑.....也许是时候记下来这些东西了\",\"同时，由于在学编曲，也感觉需要一个地方分享分享\"]},\"6\":{\"h\":\"自定义？\",\"t\":[\"不得不说自定义主题对我们开发者的吸引力太大了\",\"但是我是UI设计白痴，再加上Vue也刚学，可能就是在我现在用的这个主题的基础上做点修修补补，应该够我用了\",\"哪天不够了再从0写\"]},\"7\":{\"h\":\"写在后面\",\"t\":[\"总之这个站点也许能用起来了，希望我别忘掉\"]},\"8\":{\"c\":[\"杂谈\"]},\"9\":{\"h\":\"编曲笔记\",\"t\":[\"这里是学编曲的笔记\",\"（本人编曲菜，各位大佬勿喷）\",\"（我的笔记会偏草稿流）\"]},\"10\":{\"h\":\"音程，和弦\"},\"11\":{\"h\":\"概念\",\"t\":[\"用处：衡量音之间的距离\",\"记法：属性+数字+单位\",\"如：纯五度\"]},\"12\":{\"h\":\"计算方法：\",\"t\":[\"邪门方法\",\"度数：数两个音之间包含多少个白键（全音数），如果音有升降，则先把其还原\",\"属性：一共有：纯/大/小/增/减/倍增/倍减\",\"一度，四度，五度，八度可以用纯/增/减/倍增/倍减\",\"二度，三度，六度，七度可以用大/小/增/减/倍增/倍减\",\"一四五八只有纯，二三六七分大小\",\"标准音程表：\",\"纯一度\",\"大二度\",\"大三度\",\"纯四度\",\"纯五度\",\"大六度\",\"大七度\",\"纯八度\",\"半音数\",\"1\",\"3\",\"5\",\"6\",\"8\",\"10\",\"12\",\"13\",\"计算两个音的音程，先计算数字（还原后数白键），之后按照标准音程找属性\",\"倍减\",\"减\",\"纯\",\"增\",\"倍增\",\"n-2\",\"n-1\",\"n\",\"n+1\",\"n+2\",\"倍减\",\"减\",\"小\",\"大\",\"增\",\"倍增\",\"n-2\",\"n-1\",\"n-1\",\"n\",\"n+1\",\"n+2\"]},\"13\":{\"h\":\"概念\",\"t\":[\"以任何一个音为根音（最低音），往上叠加三度构成\"]},\"14\":{\"h\":\"三和弦\",\"t\":[\"根音到三音音程\",\"三音到五音距离\",\"名称\",\"大三度\",\"小三度\",\"大三和弦\",\"小三度\",\"大三度\",\"小三和弦\",\"小三度\",\"小三度\",\"减三和弦\",\"大三度\",\"大三度\",\"增三和弦\"]},\"15\":{\"h\":\"七和弦\",\"t\":[\"（我看的教程只讲了常用的几个，后面我学到再回来补充吧）\",\"底下的三和弦类型\",\"根音到冠音的音程\",\"名称\",\"大三和弦\",\"大七度\",\"大大七和弦（大七和弦）\",\"小三和弦\",\"小七度\",\"小小七和弦（小七和弦）\",\"大三和弦\",\"小七度\",\"大小七和弦\",\"减三和弦\",\"小七度\",\"减小七和弦\",\"减三和弦\",\"减七度\",\"减减七和弦（半减七和弦）\",\"常用\",\"3dc71ebe-b051-4c3f-ac86-5c7a0e5c4d9c.png\",\"完整\",\"QQ_1761930972584.png\"]},\"16\":{\"c\":[\"乐理笔记\"]},\"17\":{\"c\":[\"音乐\",\"乐理\",\"笔记\"]},\"18\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"19\":{\"h\":\"Talks\"},\"20\":{\"h\":\"Music\"}},\"dirtCount\":0,\"index\":[[\"talks\",{\"0\":{\"19\":1}}],[\"theme\",{\"1\":{\"3\":1}}],[\"found\",{\"1\":{\"18\":1}}],[\"404\",{\"1\":{\"18\":1}}],[\"4c3f\",{\"1\":{\"15\":1}}],[\"笔记\",{\"2\":{\"17\":1}}],[\"乐理\",{\"2\":{\"17\":1}}],[\"乐理笔记\",{\"2\":{\"16\":1}}],[\"音乐\",{\"2\":{\"17\":1}}],[\"音程\",{\"0\":{\"10\":1}}],[\"qq\",{\"1\":{\"15\":1}}],[\"完整\",{\"1\":{\"15\":1}}],[\"png\",{\"1\":{\"15\":2}}],[\"p主\",{\"1\":{\"0\":1}}],[\"ac86\",{\"1\":{\"15\":1}}],[\"about\",{\"0\":{\"0\":1}}],[\"b051\",{\"1\":{\"15\":1}}],[\"常用\",{\"1\":{\"15\":1}}],[\"半减七和弦\",{\"1\":{\"15\":1}}],[\"半音数\",{\"1\":{\"12\":1}}],[\"根音到冠音的音程\",{\"1\":{\"15\":1}}],[\"根音到三音音程\",{\"1\":{\"14\":1}}],[\"底下的三和弦类型\",{\"1\":{\"15\":1}}],[\"后面我学到再回来补充吧\",{\"1\":{\"15\":1}}],[\"后面也用过各种各样奇奇怪怪的php的博客系统\",{\"1\":{\"4\":1}}],[\"七和弦\",{\"0\":{\"15\":1}}],[\"七度可以用大\",{\"1\":{\"12\":1}}],[\"名称\",{\"1\":{\"14\":1,\"15\":1}}],[\"三音到五音距离\",{\"1\":{\"14\":1}}],[\"三和弦\",{\"0\":{\"14\":1}}],[\"三度\",{\"1\":{\"12\":1}}],[\"往上叠加三度构成\",{\"1\":{\"13\":1}}],[\"最低音\",{\"1\":{\"13\":1}}],[\"最近学了一会vue\",{\"1\":{\"4\":1}}],[\"以任何一个音为根音\",{\"1\":{\"13\":1}}],[\"2\",{\"1\":{\"12\":2}}],[\"not\",{\"1\":{\"18\":1}}],[\"n+2\",{\"1\":{\"12\":2}}],[\"n+1\",{\"1\":{\"12\":2}}],[\"n\",{\"1\":{\"12\":7}}],[\"还原后数白键\",{\"1\":{\"12\":1}}],[\"先计算数字\",{\"1\":{\"12\":1}}],[\"计算两个音的音程\",{\"1\":{\"12\":1}}],[\"计算方法\",{\"0\":{\"12\":1}}],[\"8\",{\"1\":{\"12\":1}}],[\"6\",{\"1\":{\"12\":1}}],[\"5c7a0e5c4d9c\",{\"1\":{\"15\":1}}],[\"5\",{\"1\":{\"12\":1}}],[\"3dc71ebe\",{\"1\":{\"15\":1}}],[\"3\",{\"1\":{\"12\":1}}],[\"1761930972584\",{\"1\":{\"15\":1}}],[\"13\",{\"1\":{\"12\":1}}],[\"12\",{\"1\":{\"12\":1}}],[\"10\",{\"1\":{\"12\":1}}],[\"1\",{\"1\":{\"12\":4}}],[\"标准音程表\",{\"1\":{\"12\":1}}],[\"二三六七分大小\",{\"1\":{\"12\":1}}],[\"二度\",{\"1\":{\"12\":1}}],[\"六度\",{\"1\":{\"12\":1}}],[\"八度可以用纯\",{\"1\":{\"12\":1}}],[\"五度\",{\"1\":{\"12\":1}}],[\"四度\",{\"1\":{\"12\":1}}],[\"倍减\",{\"1\":{\"12\":5}}],[\"倍增\",{\"1\":{\"12\":5}}],[\"减减七和弦\",{\"1\":{\"15\":1}}],[\"减七度\",{\"1\":{\"15\":1}}],[\"减小七和弦\",{\"1\":{\"15\":1}}],[\"减三和弦\",{\"1\":{\"14\":1,\"15\":2}}],[\"减\",{\"1\":{\"12\":5}}],[\"增三和弦\",{\"1\":{\"14\":1}}],[\"增\",{\"1\":{\"12\":5}}],[\"小七和弦\",{\"1\":{\"15\":1}}],[\"小七度\",{\"1\":{\"15\":3}}],[\"小小七和弦\",{\"1\":{\"15\":1}}],[\"小三和弦\",{\"1\":{\"14\":1,\"15\":1}}],[\"小三度\",{\"1\":{\"14\":4}}],[\"小\",{\"1\":{\"12\":3}}],[\"大小七和弦\",{\"1\":{\"15\":1}}],[\"大七和弦\",{\"1\":{\"15\":1}}],[\"大七度\",{\"1\":{\"12\":1,\"15\":1}}],[\"大大七和弦\",{\"1\":{\"15\":1}}],[\"大三和弦\",{\"1\":{\"14\":1,\"15\":2}}],[\"大三度\",{\"1\":{\"12\":1,\"14\":4}}],[\"大六度\",{\"1\":{\"12\":1}}],[\"大二度\",{\"1\":{\"12\":1}}],[\"大\",{\"1\":{\"12\":2}}],[\"纯八度\",{\"1\":{\"12\":1}}],[\"纯四度\",{\"1\":{\"12\":1}}],[\"纯一度\",{\"1\":{\"12\":1}}],[\"纯\",{\"1\":{\"12\":2}}],[\"纯五度\",{\"1\":{\"11\":1,\"12\":1}}],[\"属性\",{\"1\":{\"12\":1}}],[\"属性+数字+单位\",{\"1\":{\"11\":1}}],[\"则先把其还原\",{\"1\":{\"12\":1}}],[\"全音数\",{\"1\":{\"12\":1}}],[\"全部没坚持下来\",{\"1\":{\"3\":1}}],[\"数两个音之间包含多少个白键\",{\"1\":{\"12\":1}}],[\"度数\",{\"1\":{\"12\":1}}],[\"邪门方法\",{\"1\":{\"12\":1}}],[\"如果音有升降\",{\"1\":{\"12\":1}}],[\"如\",{\"1\":{\"11\":1}}],[\"记法\",{\"1\":{\"11\":1}}],[\"记录记录我的折腾过程\",{\"1\":{\"4\":1}}],[\"衡量音之间的距离\",{\"1\":{\"11\":1}}],[\"用处\",{\"1\":{\"11\":1}}],[\"概念\",{\"0\":{\"11\":1,\"13\":1}}],[\"和弦\",{\"0\":{\"10\":1}}],[\"我看的教程只讲了常用的几个\",{\"1\":{\"15\":1}}],[\"我的笔记会偏草稿流\",{\"1\":{\"9\":1}}],[\"我觉得我会写什么\",{\"0\":{\"5\":1}}],[\"各位大佬勿喷\",{\"1\":{\"9\":1}}],[\"本人编曲菜\",{\"1\":{\"9\":1}}],[\"编曲笔记\",{\"0\":{\"9\":1}}],[\"杂谈\",{\"2\":{\"8\":1}}],[\"希望我别忘掉\",{\"1\":{\"7\":1}}],[\"总之这个站点也许能用起来了\",{\"1\":{\"7\":1}}],[\"写在后面\",{\"0\":{\"7\":1}}],[\"写点我对博客的想法\",{\"1\":{\"3\":1}}],[\"哪天不够了再从0写\",{\"1\":{\"6\":1}}],[\"应该够我用了\",{\"1\":{\"6\":1}}],[\"可能就是在我现在用的这个主题的基础上做点修修补补\",{\"1\":{\"6\":1}}],[\"再加上vue也刚学\",{\"1\":{\"6\":1}}],[\"再一次\",{\"0\":{\"3\":1}}],[\"不得不说自定义主题对我们开发者的吸引力太大了\",{\"1\":{\"6\":1}}],[\"自定义\",{\"0\":{\"6\":1}}],[\"也感觉需要一个地方分享分享\",{\"1\":{\"5\":1}}],[\"也许是时候记下来这些东西了\",{\"1\":{\"5\":1}}],[\"由于在学编曲\",{\"1\":{\"5\":1}}],[\"由于租的服务器太烂\",{\"1\":{\"4\":1}}],[\"同时\",{\"1\":{\"5\":1}}],[\"踩过的坑\",{\"1\":{\"5\":1}}],[\"折腾项目的感想\",{\"1\":{\"5\":1}}],[\"折腾博客\",{\"0\":{\"3\":1}}],[\"于是就有了这个站点\",{\"1\":{\"4\":1}}],[\"于是开始研究vuepress\",{\"1\":{\"4\":1}}],[\"才打算重新捡起来\",{\"1\":{\"4\":1}}],[\"真的没时间和机会写博客啊\",{\"1\":{\"4\":1}}],[\"甚至开始学了点前端\",{\"1\":{\"4\":1}}],[\"接触的其实是vitepress\",{\"1\":{\"4\":1}}],[\"项目的文档站\",{\"1\":{\"4\":1}}],[\"一四五八只有纯\",{\"1\":{\"12\":1}}],[\"一度\",{\"1\":{\"12\":1}}],[\"一共有\",{\"1\":{\"12\":1}}],[\"一开始只是作为自己\",{\"1\":{\"4\":1}}],[\"一个vuepress就足够用了\",{\"1\":{\"4\":1}}],[\"一个普通的开发者\",{\"1\":{\"0\":1}}],[\"但是我是ui设计白痴\",{\"1\":{\"6\":1}}],[\"但是由于要上学\",{\"1\":{\"4\":1}}],[\"但是发现我其实都用不上他们\",{\"1\":{\"4\":1}}],[\"但是服务器忘记续费\",{\"1\":{\"4\":1}}],[\"其实也没钱续费\",{\"1\":{\"4\":1}}],[\"说实话挺喜欢typecho\",{\"1\":{\"4\":1}}],[\"之后按照标准音程找属性\",{\"1\":{\"12\":1}}],[\"之后回到vuepress\",{\"1\":{\"4\":1}}],[\"之后用typecho\",{\"1\":{\"4\":1}}],[\"之后可能再装修装修\",{\"1\":{\"3\":1}}],[\"卒\",{\"1\":{\"4\":2}}],[\"中考后尝试用wordpress做过一次\",{\"1\":{\"4\":1}}],[\"第一次搭建博客其实也没多远之前\",{\"1\":{\"4\":1}}],[\"墨冉写作本文的时候正在上高二\",{\"1\":{\"4\":1}}],[\"然后没时间维护\",{\"0\":{\"4\":1}}],[\"上学\",{\"0\":{\"4\":1}}],[\"的博客站\",{\"1\":{\"3\":1}}],[\"想到之前尝试\",{\"1\":{\"3\":1}}],[\"现在这个站点处于一个能work但是几乎啥都没配置好的情况\",{\"1\":{\"3\":1}}],[\"重新做了一个小小的博客站点\",{\"1\":{\"3\":1}}],[\"hope\",{\"1\":{\"3\":1}}],[\"hi\",{\"1\":{\"0\":1}}],[\"花了几个小时折腾了一下vuepress\",{\"1\":{\"3\":1}}],[\"这里是学编曲的笔记\",{\"1\":{\"9\":1}}],[\"这里收集维护这个博客时发生的我觉得可以写下来的事情\",{\"1\":{\"2\":1}}],[\"这里收集我在coding的时候的想法\",{\"1\":{\"1\":1}}],[\"这个博客的事\",{\"0\":{\"2\":1}}],[\"技术杂谈\",{\"0\":{\"1\":1}}],[\"学习中的vocaloid\",{\"1\":{\"0\":1}}],[\"music\",{\"0\":{\"20\":1}}],[\"moran0710\",{\"1\":{\"0\":1}}],[\"me\",{\"0\":{\"0\":1}}],[\"im\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,tt(t,r,n)]):e==="search"?self.postMessage([e,o,Z(t,r,n)]):self.postMessage({suggestions:[e,o,tt(t,r,n)],results:[e,o,Z(t,r,n)]})};
//# sourceMappingURL=index.js.map
